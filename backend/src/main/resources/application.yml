server:
  port: 8080

spring:
  application:
    name: dcf-calculator-backend
  
  # Jackson configuration for BigDecimal serialization
  jackson:
    generator:
      write-bigdecimal-as-plain: true
  
  # Database configuration
  datasource:
    url: ${SUPABASE_DATABASE_URL}
    username: ${SUPABASE_DB_USERNAME}
    password: ${SUPABASE_DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 5
      minimum-idle: 1
      connection-timeout: 20000
      idle-timeout: 300000
      max-lifetime: 1200000
      leak-detection-threshold: 60000
  
  # JPA configuration
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update # create-drop # update (in production)
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        jdbc:
          lob:
            non_contextual_creation: true
  
  # CORS configuration
  web:
    cors:
      allowed-origins: "http://localhost:3000"
      allowed-methods: "GET,POST,PUT,DELETE,OPTIONS"
      allowed-headers: "*"
      allow-credentials: true

  # Enable scheduling
  task:
    scheduling:
      enabled: true

# JWT configuration
app:
  jwt:
    secret: dcf-calculator-secret-key-change-in-production
    expiration: 86400000 # 24 hours in milliseconds

# Firebase configuration (will be set via environment variables)
firebase:
  project-id: ${FIREBASE_PROJECT_ID:dcf-calculator-dev}
  credentials-path: ${FIREBASE_CREDENTIALS_PATH:}

# Scraping configuration
scraping:
  timeout-seconds: 30
  cache-days: 7
  enable-real-scraping: true # Set to true in production with proper rate limiting
  max-retries: 3
  retry-delay-ms: 1000
  request-delay-ms: 2000
  max-requests-per-minute: 20

# Logging
logging:
  level:
    com.dcf: DEBUG
    org.springframework.security: DEBUG